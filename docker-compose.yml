version: '3.8'

services:
  # --- Serviço de Clientes ---
  cliente-db:
    image: postgres:15-alpine
    container_name: cliente-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: clientedb
    volumes:
      - cliente-data:/var/lib/postgresql/data
    ports:
      - '5433:5432'

  # --- Serviço de Produtos ---
  produto-db:
    image: postgres:15-alpine
    container_name: produto-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: produtodb
    volumes:
      - produto-data:/var/lib/postgresql/data
    ports:
      - '5434:5432'

  pagamento-db:
    image: postgres:15-alpine
    container_name: pagamento-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pagamentodb
    volumes:
      - pagamento-data:/var/lib/postgresql/data
    ports:
      - '5435:5432'

  # --- Banco de dados de Pedidos (MongoDB) ---
  orders-db:
    image: mongo:6.0
    container_name: orders-db
    restart: always
    volumes:
      - orders_mongo_data:/data/db
    ports:
      - '27017:27017'
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval \"db.runCommand({ ping: 1 })\" || mongosh -u admin -p admin --authenticationDatabase admin --quiet --eval \"db.runCommand({ ping: 1 })\""]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  # --- UI para MongoDB ---
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: orders-db
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - orders-db

  # --- Inicialização do Replica Set ---
  orders-db-init:
    image: mongo:6.0
    depends_on:
      - orders-db
    entrypoint: >
      bash -c '
        set -e
        until mongosh --host orders-db:27017 --quiet --eval "db.adminCommand({ ping: 1 })" >/dev/null 2>&1; do
          echo "Waiting for MongoDB..."
          sleep 2
        done

        mongosh --host orders-db:27017 --quiet --eval "try { rs.status() } catch (e) { rs.initiate({_id: \"rs0\", members: [{ _id: 0, host: \"orders-db:27017\" }]}) }"
        mongosh --host orders-db:27017 --quiet --eval "db.adminCommand({ setDefaultRWConcern: 1, defaultWriteConcern: { w: \"majority\" } })"
      '
    restart: "no"

  cliente-service:
    container_name: cliente-service
    build: ./cliente
    restart: always
    ports:
      - '3001:3001'
    environment:
      DATABASE_URL: "postgresql://user:password@cliente-db:5432/clientedb"
    depends_on:
      - cliente-db
    command: sh -c "npx prisma migrate deploy && npm start"

  produto-service:
    container_name: produto-service
    build: ./produto
    restart: always
    ports:
      - '3002:3002'
    environment:
      DATABASE_URL: "postgresql://user:password@produto-db:5432/produtodb"
    depends_on:
      - produto-db
    command: sh -c "npx prisma migrate deploy && npm start"

  pagamentos-service:
    container_name: pagamentos-service
    build: ./pagamentos
    restart: always
    ports:
      - '3004:3004'
    environment:
      DATABASE_URL: "postgresql://user:password@pagamento-db:5432/pagamentodb"
    depends_on:
      - pagamento-db
    command: sh -c "npx prisma migrate deploy && npx prisma db seed && npm start"

  notificacoes-service:
    container_name: notificacoes-service
    build: ./notificacoes
    restart: always
    ports:
      - '3005:3005'

  pedidos-service:
    container_name: pedidos-service
    build: ./pedidos
    restart: always
    ports:
      - '3003:3003'
    env_file:
      - ./.env
    depends_on:
      - orders-db-init
    command: sh -c "npx prisma db push && npm start"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_ecommerce
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - produto-db
      - cliente-db
      - pagamento-db

volumes:
  cliente-data:
  produto-data:
  pagamento-data:
  pgadmin_data:
  orders_mongo_data:
